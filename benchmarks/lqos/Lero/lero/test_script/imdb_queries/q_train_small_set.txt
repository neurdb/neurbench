q13b#####select min(cn.name) as producing_company, min(miidx.info) as rating, min(t.title) as movie_about_winning from company_name as cn, company_type as ct, info_type as it, info_type as it2, kind_type as kt, movie_companies as mc, movie_info as mi, movie_info_idx as miidx, title as t where cn.country_code ='[us]' and ct.kind ='production companies' and it.info ='rating' and it2.info ='release dates' and kt.kind ='movie' and t.title != '' and (t.title like '%champion%' or t.title like '%loser%') and mi.movie_id = t.id and it2.id = mi.info_type_id and kt.id = t.kind_id and mc.movie_id = t.id and cn.id = mc.company_id and ct.id = mc.company_type_id and miidx.movie_id = t.id and it.id = miidx.info_type_id and mi.movie_id = miidx.movie_id and mi.movie_id = mc.movie_id and miidx.movie_id = mc.movie_id;
q25a#####select min(mi.info) as movie_budget, min(mi_idx.info) as movie_votes, min(n.name) as male_writer, min(t.title) as violent_movie_title from cast_info as ci, info_type as it1, info_type as it2, keyword as k, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, name as n, title as t where ci.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') and it1.info = 'genres' and it2.info = 'votes' and k.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity') and mi.info = 'horror' and n.gender = 'm' and t.id = mi.movie_id and t.id = mi_idx.movie_id and t.id = ci.movie_id and t.id = mk.movie_id and ci.movie_id = mi.movie_id and ci.movie_id = mi_idx.movie_id and ci.movie_id = mk.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mk.movie_id and mi_idx.movie_id = mk.movie_id and n.id = ci.person_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and k.id = mk.keyword_id;
q33a#####select min(cn1.name) as first_company, min(cn2.name) as second_company, min(mi_idx1.info) as first_rating, min(mi_idx2.info) as second_rating, min(t1.title) as first_movie, min(t2.title) as second_movie from company_name as cn1, company_name as cn2, info_type as it1, info_type as it2, kind_type as kt1, kind_type as kt2, link_type as lt, movie_companies as mc1, movie_companies as mc2, movie_info_idx as mi_idx1, movie_info_idx as mi_idx2, movie_link as ml, title as t1, title as t2 where cn1.country_code = '[us]' and it1.info = 'rating' and it2.info = 'rating' and kt1.kind in ('tv series') and kt2.kind in ('tv series') and lt.link in ('sequel', 'follows', 'followed by') and mi_idx2.info < '3.0' and t2.production_year between 2005 and 2008 and lt.id = ml.link_type_id and t1.id = ml.movie_id and t2.id = ml.linked_movie_id and it1.id = mi_idx1.info_type_id and t1.id = mi_idx1.movie_id and kt1.id = t1.kind_id and cn1.id = mc1.company_id and t1.id = mc1.movie_id and ml.movie_id = mi_idx1.movie_id and ml.movie_id = mc1.movie_id and mi_idx1.movie_id = mc1.movie_id and it2.id = mi_idx2.info_type_id and t2.id = mi_idx2.movie_id and kt2.id = t2.kind_id and cn2.id = mc2.company_id and t2.id = mc2.movie_id and ml.linked_movie_id = mi_idx2.movie_id and ml.linked_movie_id = mc2.movie_id and mi_idx2.movie_id = mc2.movie_id;
q3b#####select min(t.title) as movie_title from keyword as k, movie_info as mi, movie_keyword as mk, title as t where k.keyword like '%sequel%' and mi.info in ('bulgaria') and t.production_year > 2010 and t.id = mi.movie_id and t.id = mk.movie_id and mk.movie_id = mi.movie_id and k.id = mk.keyword_id;
q13c#####select min(cn.name) as producing_company, min(miidx.info) as rating, min(t.title) as movie_about_winning from company_name as cn, company_type as ct, info_type as it, info_type as it2, kind_type as kt, movie_companies as mc, movie_info as mi, movie_info_idx as miidx, title as t where cn.country_code ='[us]' and ct.kind ='production companies' and it.info ='rating' and it2.info ='release dates' and kt.kind ='movie' and t.title != '' and (t.title like 'champion%' or t.title like 'loser%') and mi.movie_id = t.id and it2.id = mi.info_type_id and kt.id = t.kind_id and mc.movie_id = t.id and cn.id = mc.company_id and ct.id = mc.company_type_id and miidx.movie_id = t.id and it.id = miidx.info_type_id and mi.movie_id = miidx.movie_id and mi.movie_id = mc.movie_id and miidx.movie_id = mc.movie_id;
q13a#####select min(mi.info) as release_date, min(miidx.info) as rating, min(t.title) as german_movie from company_name as cn, company_type as ct, info_type as it, info_type as it2, kind_type as kt, movie_companies as mc, movie_info as mi, movie_info_idx as miidx, title as t where cn.country_code ='[de]' and ct.kind ='production companies' and it.info ='rating' and it2.info ='release dates' and kt.kind ='movie' and mi.movie_id = t.id and it2.id = mi.info_type_id and kt.id = t.kind_id and mc.movie_id = t.id and cn.id = mc.company_id and ct.id = mc.company_type_id and miidx.movie_id = t.id and it.id = miidx.info_type_id and mi.movie_id = miidx.movie_id and mi.movie_id = mc.movie_id and miidx.movie_id = mc.movie_id;
q33c#####select min(cn1.name) as first_company, min(cn2.name) as second_company, min(mi_idx1.info) as first_rating, min(mi_idx2.info) as second_rating, min(t1.title) as first_movie, min(t2.title) as second_movie from company_name as cn1, company_name as cn2, info_type as it1, info_type as it2, kind_type as kt1, kind_type as kt2, link_type as lt, movie_companies as mc1, movie_companies as mc2, movie_info_idx as mi_idx1, movie_info_idx as mi_idx2, movie_link as ml, title as t1, title as t2 where cn1.country_code != '[us]' and it1.info = 'rating' and it2.info = 'rating' and kt1.kind in ('tv series', 'episode') and kt2.kind in ('tv series', 'episode') and lt.link in ('sequel', 'follows', 'followed by') and mi_idx2.info < '3.5' and t2.production_year between 2000 and 2010 and lt.id = ml.link_type_id and t1.id = ml.movie_id and t2.id = ml.linked_movie_id and it1.id = mi_idx1.info_type_id and t1.id = mi_idx1.movie_id and kt1.id = t1.kind_id and cn1.id = mc1.company_id and t1.id = mc1.movie_id and ml.movie_id = mi_idx1.movie_id and ml.movie_id = mc1.movie_id and mi_idx1.movie_id = mc1.movie_id and it2.id = mi_idx2.info_type_id and t2.id = mi_idx2.movie_id and kt2.id = t2.kind_id and cn2.id = mc2.company_id and t2.id = mc2.movie_id and ml.linked_movie_id = mi_idx2.movie_id and ml.linked_movie_id = mc2.movie_id and mi_idx2.movie_id = mc2.movie_id;
q25b#####select min(mi.info) as movie_budget, min(mi_idx.info) as movie_votes, min(n.name) as male_writer, min(t.title) as violent_movie_title from cast_info as ci, info_type as it1, info_type as it2, keyword as k, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, name as n, title as t where ci.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') and it1.info = 'genres' and it2.info = 'votes' and k.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity') and mi.info = 'horror' and n.gender = 'm' and t.production_year > 2010 and t.title like 'vampire%' and t.id = mi.movie_id and t.id = mi_idx.movie_id and t.id = ci.movie_id and t.id = mk.movie_id and ci.movie_id = mi.movie_id and ci.movie_id = mi_idx.movie_id and ci.movie_id = mk.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mk.movie_id and mi_idx.movie_id = mk.movie_id and n.id = ci.person_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and k.id = mk.keyword_id;
q3a#####select min(t.title) as movie_title from keyword as k, movie_info as mi, movie_keyword as mk, title as t where k.keyword like '%sequel%' and mi.info in ('sweden', 'norway', 'germany', 'denmark', 'swedish', 'denish', 'norwegian', 'german') and t.production_year > 2005 and t.id = mi.movie_id and t.id = mk.movie_id and mk.movie_id = mi.movie_id and k.id = mk.keyword_id;
q2a#####select min(t.title) as movie_title from company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, title as t where cn.country_code ='[de]' and k.keyword ='character-name-in-title' and cn.id = mc.company_id and mc.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and mc.movie_id = mk.movie_id;
q28a#####select min(cn.name) as movie_company, min(mi_idx.info) as rating, min(t.title) as complete_euro_dark_movie from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, company_name as cn, company_type as ct, info_type as it1, info_type as it2, keyword as k, kind_type as kt, movie_companies as mc, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, title as t where cct1.kind = 'crew' and cct2.kind != 'complete+verified' and cn.country_code != '[us]' and it1.info = 'countries' and it2.info = 'rating' and k.keyword in ('murder', 'murder-in-title', 'blood', 'violence') and kt.kind in ('movie', 'episode') and mc.note not like '%(usa)%' and mc.note like '%(200%)%' and mi.info in ('sweden', 'norway', 'germany', 'denmark', 'swedish', 'danish', 'norwegian', 'german', 'usa', 'american') and mi_idx.info < '8.5' and t.production_year > 2000 and kt.id = t.kind_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mi_idx.movie_id and t.id = mc.movie_id and t.id = cc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mi_idx.movie_id and mk.movie_id = mc.movie_id and mk.movie_id = cc.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mc.movie_id and mi.movie_id = cc.movie_id and mc.movie_id = mi_idx.movie_id and mc.movie_id = cc.movie_id and mi_idx.movie_id = cc.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and ct.id = mc.company_type_id and cn.id = mc.company_id and cct1.id = cc.subject_id and cct2.id = cc.status_id;
q12a#####select min(cn.name) as movie_company, min(mi_idx.info) as rating, min(t.title) as drama_horror_movie from company_name as cn, company_type as ct, info_type as it1, info_type as it2, movie_companies as mc, movie_info as mi, movie_info_idx as mi_idx, title as t where cn.country_code = '[us]' and ct.kind = 'production companies' and it1.info = 'genres' and it2.info = 'rating' and mi.info in ('drama', 'horror') and mi_idx.info > '8.0' and t.production_year between 2005 and 2008 and t.id = mi.movie_id and t.id = mi_idx.movie_id and mi.info_type_id = it1.id and mi_idx.info_type_id = it2.id and t.id = mc.movie_id and ct.id = mc.company_type_id and cn.id = mc.company_id and mc.movie_id = mi.movie_id and mc.movie_id = mi_idx.movie_id and mi.movie_id = mi_idx.movie_id;
q2b#####select min(t.title) as movie_title from company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, title as t where cn.country_code ='[nl]' and k.keyword ='character-name-in-title' and cn.id = mc.company_id and mc.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and mc.movie_id = mk.movie_id;
q32a#####select min(lt.link) as link_type, min(t1.title) as first_movie, min(t2.title) as second_movie from keyword as k, link_type as lt, movie_keyword as mk, movie_link as ml, title as t1, title as t2 where k.keyword ='10,000-mile-club' and mk.keyword_id = k.id and t1.id = mk.movie_id and ml.movie_id = t1.id and ml.linked_movie_id = t2.id and lt.id = ml.link_type_id and mk.movie_id = t1.id;
q24a#####select min(chn.name) as voiced_char_name, min(n.name) as voicing_actress_name, min(t.title) as voiced_action_movie_jap_eng from aka_name as an, char_name as chn, cast_info as ci, company_name as cn, info_type as it, keyword as k, movie_companies as mc, movie_info as mi, movie_keyword as mk, name as n, role_type as rt, title as t where ci.note in ('(voice)', '(voice: japanese version)', '(voice) (uncredited)', '(voice: english version)') and cn.country_code ='[us]' and it.info = 'release dates' and k.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat') and mi.info is not null and (mi.info like 'japan:%201%' or mi.info like 'usa:%201%') and n.gender ='f' and n.name like '%an%' and rt.role ='actress' and t.production_year > 2010 and t.id = mi.movie_id and t.id = mc.movie_id and t.id = ci.movie_id and t.id = mk.movie_id and mc.movie_id = ci.movie_id and mc.movie_id = mi.movie_id and mc.movie_id = mk.movie_id and mi.movie_id = ci.movie_id and mi.movie_id = mk.movie_id and ci.movie_id = mk.movie_id and cn.id = mc.company_id and it.id = mi.info_type_id and n.id = ci.person_id and rt.id = ci.role_id and n.id = an.person_id and ci.person_id = an.person_id and chn.id = ci.person_role_id and k.id = mk.keyword_id;
q28b#####select min(cn.name) as movie_company, min(mi_idx.info) as rating, min(t.title) as complete_euro_dark_movie from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, company_name as cn, company_type as ct, info_type as it1, info_type as it2, keyword as k, kind_type as kt, movie_companies as mc, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, title as t where cct1.kind = 'crew' and cct2.kind != 'complete+verified' and cn.country_code != '[us]' and it1.info = 'countries' and it2.info = 'rating' and k.keyword in ('murder', 'murder-in-title', 'blood', 'violence') and kt.kind in ('movie', 'episode') and mc.note not like '%(usa)%' and mc.note like '%(200%)%' and mi.info in ('sweden', 'germany', 'swedish', 'german') and mi_idx.info > '6.5' and t.production_year > 2005 and kt.id = t.kind_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mi_idx.movie_id and t.id = mc.movie_id and t.id = cc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mi_idx.movie_id and mk.movie_id = mc.movie_id and mk.movie_id = cc.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mc.movie_id and mi.movie_id = cc.movie_id and mc.movie_id = mi_idx.movie_id and mc.movie_id = cc.movie_id and mi_idx.movie_id = cc.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and ct.id = mc.company_type_id and cn.id = mc.company_id and cct1.id = cc.subject_id and cct2.id = cc.status_id;
q2c#####select min(t.title) as movie_title from company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, title as t where cn.country_code ='[sm]' and k.keyword ='character-name-in-title' and cn.id = mc.company_id and mc.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and mc.movie_id = mk.movie_id;
q12b#####select min(mi.info) as budget, min(t.title) as unsuccsessful_movie from company_name as cn, company_type as ct, info_type as it1, info_type as it2, movie_companies as mc, movie_info as mi, movie_info_idx as mi_idx, title as t where cn.country_code ='[us]' and ct.kind is not null and (ct.kind ='production companies' or ct.kind = 'distributors') and it1.info ='budget' and it2.info ='bottom 10 rank' and t.production_year >2000 and (t.title like 'birdemic%' or t.title like '%movie%') and t.id = mi.movie_id and t.id = mi_idx.movie_id and mi.info_type_id = it1.id and mi_idx.info_type_id = it2.id and t.id = mc.movie_id and ct.id = mc.company_type_id and cn.id = mc.company_id and mc.movie_id = mi.movie_id and mc.movie_id = mi_idx.movie_id and mi.movie_id = mi_idx.movie_id;
q15a#####select min(mi.info) as release_date, min(t.title) as internet_movie from aka_title as at, company_name as cn, company_type as ct, info_type as it1, keyword as k, movie_companies as mc, movie_info as mi, movie_keyword as mk, title as t where cn.country_code = '[us]' and it1.info = 'release dates' and mc.note like '%(200%)%' and mc.note like '%(worldwide)%' and mi.note like '%internet%' and mi.info like 'usa:% 200%' and t.production_year > 2000 and t.id = at.movie_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mc.movie_id and mk.movie_id = at.movie_id and mi.movie_id = mc.movie_id and mi.movie_id = at.movie_id and mc.movie_id = at.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and cn.id = mc.company_id and ct.id = mc.company_type_id;
q9c#####select min(an.name) as alternative_name, min(chn.name) as voiced_character_name, min(n.name) as voicing_actress, min(t.title) as american_movie from aka_name as an, char_name as chn, cast_info as ci, company_name as cn, movie_companies as mc, name as n, role_type as rt, title as t where ci.note in ('(voice)', '(voice: japanese version)', '(voice) (uncredited)', '(voice: english version)') and cn.country_code ='[us]' and n.gender ='f' and n.name like '%an%' and rt.role ='actress' and ci.movie_id = t.id and t.id = mc.movie_id and ci.movie_id = mc.movie_id and mc.company_id = cn.id and ci.role_id = rt.id and n.id = ci.person_id and chn.id = ci.person_role_id and an.person_id = n.id and an.person_id = ci.person_id;
q19b#####select min(n.name) as voicing_actress, min(t.title) as kung_fu_panda from aka_name as an, char_name as chn, cast_info as ci, company_name as cn, info_type as it, movie_companies as mc, movie_info as mi, name as n, role_type as rt, title as t where ci.note = '(voice)' and cn.country_code ='[us]' and it.info = 'release dates' and mc.note like '%(200%)%' and (mc.note like '%(usa)%' or mc.note like '%(worldwide)%') and mi.info is not null and (mi.info like 'japan:%2007%' or mi.info like 'usa:%2008%') and n.gender ='f' and n.name like '%angel%' and rt.role ='actress' and t.production_year between 2007 and 2008 and t.title like '%kung%fu%panda%' and t.id = mi.movie_id and t.id = mc.movie_id and t.id = ci.movie_id and mc.movie_id = ci.movie_id and mc.movie_id = mi.movie_id and mi.movie_id = ci.movie_id and cn.id = mc.company_id and it.id = mi.info_type_id and n.id = ci.person_id and rt.id = ci.role_id and n.id = an.person_id and ci.person_id = an.person_id and chn.id = ci.person_role_id;
q23b#####select min(kt.kind) as movie_kind, min(t.title) as complete_nerdy_internet_movie from complete_cast as cc, comp_cast_type as cct1, company_name as cn, company_type as ct, info_type as it1, keyword as k, kind_type as kt, movie_companies as mc, movie_info as mi, movie_keyword as mk, title as t where cct1.kind = 'complete+verified' and cn.country_code = '[us]' and it1.info = 'release dates' and k.keyword in ('nerd', 'loner', 'alienation', 'dignity') and kt.kind in ('movie') and mi.note like '%internet%' and mi.info like 'usa:% 200%' and t.production_year > 2000 and kt.id = t.kind_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mc.movie_id and t.id = cc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mc.movie_id and mk.movie_id = cc.movie_id and mi.movie_id = mc.movie_id and mi.movie_id = cc.movie_id and mc.movie_id = cc.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and cn.id = mc.company_id and ct.id = mc.company_type_id and cct1.id = cc.status_id;
q5a#####select min(t.title) as typical_european_movie from company_type as ct, info_type as it, movie_companies as mc, movie_info as mi, title as t where ct.kind = 'production companies' and mc.note like '%(theatrical)%' and mc.note like '%(france)%' and mi.info in ('sweden', 'norway', 'germany', 'denmark', 'swedish', 'denish', 'norwegian', 'german') and t.production_year > 2005 and t.id = mi.movie_id and t.id = mc.movie_id and mc.movie_id = mi.movie_id and ct.id = mc.company_type_id and it.id = mi.info_type_id;
q19c#####select min(n.name) as voicing_actress, min(t.title) as jap_engl_voiced_movie from aka_name as an, char_name as chn, cast_info as ci, company_name as cn, info_type as it, movie_companies as mc, movie_info as mi, name as n, role_type as rt, title as t where ci.note in ('(voice)', '(voice: japanese version)', '(voice) (uncredited)', '(voice: english version)') and cn.country_code ='[us]' and it.info = 'release dates' and mi.info is not null and (mi.info like 'japan:%200%' or mi.info like 'usa:%200%') and n.gender ='f' and n.name like '%an%' and rt.role ='actress' and t.production_year > 2000 and t.id = mi.movie_id and t.id = mc.movie_id and t.id = ci.movie_id and mc.movie_id = ci.movie_id and mc.movie_id = mi.movie_id and mi.movie_id = ci.movie_id and cn.id = mc.company_id and it.id = mi.info_type_id and n.id = ci.person_id and rt.id = ci.role_id and n.id = an.person_id and ci.person_id = an.person_id and chn.id = ci.person_role_id;
q9b#####select min(an.name) as alternative_name, min(chn.name) as voiced_character, min(n.name) as voicing_actress, min(t.title) as american_movie from aka_name as an, char_name as chn, cast_info as ci, company_name as cn, movie_companies as mc, name as n, role_type as rt, title as t where ci.note = '(voice)' and cn.country_code ='[us]' and mc.note like '%(200%)%' and (mc.note like '%(usa)%' or mc.note like '%(worldwide)%') and n.gender ='f' and n.name like '%angel%' and rt.role ='actress' and t.production_year between 2007 and 2010 and ci.movie_id = t.id and t.id = mc.movie_id and ci.movie_id = mc.movie_id and mc.company_id = cn.id and ci.role_id = rt.id and n.id = ci.person_id and chn.id = ci.person_role_id and an.person_id = n.id and an.person_id = ci.person_id;
q15b#####select min(mi.info) as release_date, min(t.title) as youtube_movie from aka_title as at, company_name as cn, company_type as ct, info_type as it1, keyword as k, movie_companies as mc, movie_info as mi, movie_keyword as mk, title as t where cn.country_code = '[us]' and cn.name = 'youtube' and it1.info = 'release dates' and mc.note like '%(200%)%' and mc.note like '%(worldwide)%' and mi.note like '%internet%' and mi.info like 'usa:% 200%' and t.production_year between 2005 and 2010 and t.id = at.movie_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mc.movie_id and mk.movie_id = at.movie_id and mi.movie_id = mc.movie_id and mi.movie_id = at.movie_id and mc.movie_id = at.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and cn.id = mc.company_id and ct.id = mc.company_type_id;
q19a#####select min(n.name) as voicing_actress, min(t.title) as voiced_movie from aka_name as an, char_name as chn, cast_info as ci, company_name as cn, info_type as it, movie_companies as mc, movie_info as mi, name as n, role_type as rt, title as t where ci.note in ('(voice)', '(voice: japanese version)', '(voice) (uncredited)', '(voice: english version)') and cn.country_code ='[us]' and it.info = 'release dates' and mc.note is not null and (mc.note like '%(usa)%' or mc.note like '%(worldwide)%') and mi.info is not null and (mi.info like 'japan:%200%' or mi.info like 'usa:%200%') and n.gender ='f' and n.name like '%ang%' and rt.role ='actress' and t.production_year between 2005 and 2009 and t.id = mi.movie_id and t.id = mc.movie_id and t.id = ci.movie_id and mc.movie_id = ci.movie_id and mc.movie_id = mi.movie_id and mi.movie_id = ci.movie_id and cn.id = mc.company_id and it.id = mi.info_type_id and n.id = ci.person_id and rt.id = ci.role_id and n.id = an.person_id and ci.person_id = an.person_id and chn.id = ci.person_role_id;
q23a#####select min(kt.kind) as movie_kind, min(t.title) as complete_us_internet_movie from complete_cast as cc, comp_cast_type as cct1, company_name as cn, company_type as ct, info_type as it1, keyword as k, kind_type as kt, movie_companies as mc, movie_info as mi, movie_keyword as mk, title as t where cct1.kind = 'complete+verified' and cn.country_code = '[us]' and it1.info = 'release dates' and kt.kind in ('movie') and mi.note like '%internet%' and mi.info is not null and (mi.info like 'usa:% 199%' or mi.info like 'usa:% 200%') and t.production_year > 2000 and kt.id = t.kind_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mc.movie_id and t.id = cc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mc.movie_id and mk.movie_id = cc.movie_id and mi.movie_id = mc.movie_id and mi.movie_id = cc.movie_id and mc.movie_id = cc.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and cn.id = mc.company_id and ct.id = mc.company_type_id and cct1.id = cc.status_id;
q5b#####select min(t.title) as american_vhs_movie from company_type as ct, info_type as it, movie_companies as mc, movie_info as mi, title as t where ct.kind = 'production companies' and mc.note like '%(vhs)%' and mc.note like '%(usa)%' and mc.note like '%(1994)%' and mi.info in ('usa', 'america') and t.production_year > 2010 and t.id = mi.movie_id and t.id = mc.movie_id and mc.movie_id = mi.movie_id and ct.id = mc.company_type_id and it.id = mi.info_type_id;
q9a#####select min(an.name) as alternative_name, min(chn.name) as character_name, min(t.title) as movie from aka_name as an, char_name as chn, cast_info as ci, company_name as cn, movie_companies as mc, name as n, role_type as rt, title as t where ci.note in ('(voice)', '(voice: japanese version)', '(voice) (uncredited)', '(voice: english version)') and cn.country_code ='[us]' and mc.note is not null and (mc.note like '%(usa)%' or mc.note like '%(worldwide)%') and n.gender ='f' and n.name like '%ang%' and rt.role ='actress' and t.production_year between 2005 and 2015 and ci.movie_id = t.id and t.id = mc.movie_id and ci.movie_id = mc.movie_id and mc.company_id = cn.id and ci.role_id = rt.id and n.id = ci.person_id and chn.id = ci.person_role_id and an.person_id = n.id and an.person_id = ci.person_id;
q15c#####select min(mi.info) as release_date, min(t.title) as modern_american_internet_movie from aka_title as at, company_name as cn, company_type as ct, info_type as it1, keyword as k, movie_companies as mc, movie_info as mi, movie_keyword as mk, title as t where cn.country_code = '[us]' and it1.info = 'release dates' and mi.note like '%internet%' and mi.info is not null and (mi.info like 'usa:% 199%' or mi.info like 'usa:% 200%') and t.production_year > 1990 and t.id = at.movie_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mc.movie_id and mk.movie_id = at.movie_id and mi.movie_id = mc.movie_id and mi.movie_id = at.movie_id and mc.movie_id = at.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and cn.id = mc.company_id and ct.id = mc.company_type_id;
q8a#####select min(an1.name) as actress_pseudonym, min(t.title) as japanese_movie_dubbed from aka_name as an1, cast_info as ci, company_name as cn, movie_companies as mc, name as n1, role_type as rt, title as t where ci.note ='(voice: english version)' and cn.country_code ='[jp]' and mc.note like '%(japan)%' and mc.note not like '%(usa)%' and n1.name like '%yo%' and n1.name not like '%yu%' and rt.role ='actress' and an1.person_id = n1.id and n1.id = ci.person_id and ci.movie_id = t.id and t.id = mc.movie_id and mc.company_id = cn.id and ci.role_id = rt.id and an1.person_id = ci.person_id and ci.movie_id = mc.movie_id;
q4b#####select min(mi_idx.info) as rating, min(t.title) as movie_title from info_type as it, keyword as k, movie_info_idx as mi_idx, movie_keyword as mk, title as t where it.info ='rating' and k.keyword like '%sequel%' and mi_idx.info > '9.0' and t.production_year > 2010 and t.id = mi_idx.movie_id and t.id = mk.movie_id and mk.movie_id = mi_idx.movie_id and k.id = mk.keyword_id and it.id = mi_idx.info_type_id;
q22a#####select min(cn.name) as movie_company, min(mi_idx.info) as rating, min(t.title) as western_violent_movie from company_name as cn, company_type as ct, info_type as it1, info_type as it2, keyword as k, kind_type as kt, movie_companies as mc, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, title as t where cn.country_code != '[us]' and it1.info = 'countries' and it2.info = 'rating' and k.keyword in ('murder', 'murder-in-title', 'blood', 'violence') and kt.kind in ('movie', 'episode') and mc.note not like '%(usa)%' and mc.note like '%(200%)%' and mi.info in ('germany', 'german', 'usa', 'american') and mi_idx.info < '7.0' and t.production_year > 2008 and kt.id = t.kind_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mi_idx.movie_id and t.id = mc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mi_idx.movie_id and mk.movie_id = mc.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mc.movie_id and mc.movie_id = mi_idx.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and ct.id = mc.company_type_id and cn.id = mc.company_id;
q18a#####select min(mi.info) as movie_budget, min(mi_idx.info) as movie_votes, min(t.title) as movie_title from cast_info as ci, info_type as it1, info_type as it2, movie_info as mi, movie_info_idx as mi_idx, name as n, title as t where ci.note in ('(producer)', '(executive producer)') and it1.info = 'budget' and it2.info = 'votes' and n.gender = 'm' and n.name like '%tim%' and t.id = mi.movie_id and t.id = mi_idx.movie_id and t.id = ci.movie_id and ci.movie_id = mi.movie_id and ci.movie_id = mi_idx.movie_id and mi.movie_id = mi_idx.movie_id and n.id = ci.person_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id;
q14b#####select min(mi_idx.info) as rating, min(t.title) as western_dark_production from info_type as it1, info_type as it2, keyword as k, kind_type as kt, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, title as t where it1.info = 'countries' and it2.info = 'rating' and k.keyword in ('murder', 'murder-in-title') and kt.kind = 'movie' and mi.info in ('sweden', 'norway', 'germany', 'denmark', 'swedish', 'denish', 'norwegian', 'german', 'usa', 'american') and mi_idx.info > '6.0' and t.production_year > 2010 and (t.title like '%murder%' or t.title like '%murder%' or t.title like '%mord%') and kt.id = t.kind_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mi_idx.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mi_idx.movie_id and mi.movie_id = mi_idx.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id;
q8b#####select min(an.name) as acress_pseudonym, min(t.title) as japanese_anime_movie from aka_name as an, cast_info as ci, company_name as cn, movie_companies as mc, name as n, role_type as rt, title as t where ci.note ='(voice: english version)' and cn.country_code ='[jp]' and mc.note like '%(japan)%' and mc.note not like '%(usa)%' and (mc.note like '%(2006)%' or mc.note like '%(2007)%') and n.name like '%yo%' and n.name not like '%yu%' and rt.role ='actress' and t.production_year between 2006 and 2007 and (t.title like 'one piece%' or t.title like 'dragon ball z%') and an.person_id = n.id and n.id = ci.person_id and ci.movie_id = t.id and t.id = mc.movie_id and mc.company_id = cn.id and ci.role_id = rt.id and an.person_id = ci.person_id and ci.movie_id = mc.movie_id;
q4a#####select min(mi_idx.info) as rating, min(t.title) as movie_title from info_type as it, keyword as k, movie_info_idx as mi_idx, movie_keyword as mk, title as t where it.info ='rating' and k.keyword like '%sequel%' and mi_idx.info > '5.0' and t.production_year > 2005 and t.id = mi_idx.movie_id and t.id = mk.movie_id and mk.movie_id = mi_idx.movie_id and k.id = mk.keyword_id and it.id = mi_idx.info_type_id;
q22b#####select min(cn.name) as movie_company, min(mi_idx.info) as rating, min(t.title) as western_violent_movie from company_name as cn, company_type as ct, info_type as it1, info_type as it2, keyword as k, kind_type as kt, movie_companies as mc, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, title as t where cn.country_code != '[us]' and it1.info = 'countries' and it2.info = 'rating' and k.keyword in ('murder', 'murder-in-title', 'blood', 'violence') and kt.kind in ('movie', 'episode') and mc.note not like '%(usa)%' and mc.note like '%(200%)%' and mi.info in ('germany', 'german', 'usa', 'american') and mi_idx.info < '7.0' and t.production_year > 2009 and kt.id = t.kind_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mi_idx.movie_id and t.id = mc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mi_idx.movie_id and mk.movie_id = mc.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mc.movie_id and mc.movie_id = mi_idx.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and ct.id = mc.company_type_id and cn.id = mc.company_id;
q22c#####select min(cn.name) as movie_company, min(mi_idx.info) as rating, min(t.title) as western_violent_movie from company_name as cn, company_type as ct, info_type as it1, info_type as it2, keyword as k, kind_type as kt, movie_companies as mc, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, title as t where cn.country_code != '[us]' and it1.info = 'countries' and it2.info = 'rating' and k.keyword in ('murder', 'murder-in-title', 'blood', 'violence') and kt.kind in ('movie', 'episode') and mc.note not like '%(usa)%' and mc.note like '%(200%)%' and mi.info in ('sweden', 'norway', 'germany', 'denmark', 'swedish', 'danish', 'norwegian', 'german', 'usa', 'american') and mi_idx.info < '8.5' and t.production_year > 2005 and kt.id = t.kind_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mi_idx.movie_id and t.id = mc.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mi_idx.movie_id and mk.movie_id = mc.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mc.movie_id and mc.movie_id = mi_idx.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and ct.id = mc.company_type_id and cn.id = mc.company_id;
q18b#####select min(mi.info) as movie_budget, min(mi_idx.info) as movie_votes, min(t.title) as movie_title from cast_info as ci, info_type as it1, info_type as it2, movie_info as mi, movie_info_idx as mi_idx, name as n, title as t where ci.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') and it1.info = 'genres' and it2.info = 'rating' and mi.info in ('horror', 'thriller') and mi.note is null and mi_idx.info > '8.0' and n.gender is not null and n.gender = 'f' and t.production_year between 2008 and 2014 and t.id = mi.movie_id and t.id = mi_idx.movie_id and t.id = ci.movie_id and ci.movie_id = mi.movie_id and ci.movie_id = mi_idx.movie_id and mi.movie_id = mi_idx.movie_id and n.id = ci.person_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id;
q14a#####select min(mi_idx.info) as rating, min(t.title) as northern_dark_movie from info_type as it1, info_type as it2, keyword as k, kind_type as kt, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, title as t where it1.info = 'countries' and it2.info = 'rating' and k.keyword in ('murder', 'murder-in-title', 'blood', 'violence') and kt.kind = 'movie' and mi.info in ('sweden', 'norway', 'germany', 'denmark', 'swedish', 'denish', 'norwegian', 'german', 'usa', 'american') and mi_idx.info < '8.5' and t.production_year > 2010 and kt.id = t.kind_id and t.id = mi.movie_id and t.id = mk.movie_id and t.id = mi_idx.movie_id and mk.movie_id = mi.movie_id and mk.movie_id = mi_idx.movie_id and mi.movie_id = mi_idx.movie_id and k.id = mk.keyword_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id;
q8c#####select min(a1.name) as writer_pseudo_name, min(t.title) as movie_title from aka_name as a1, cast_info as ci, company_name as cn, movie_companies as mc, name as n1, role_type as rt, title as t where cn.country_code ='[us]' and rt.role ='writer' and a1.person_id = n1.id and n1.id = ci.person_id and ci.movie_id = t.id and t.id = mc.movie_id and mc.company_id = cn.id and ci.role_id = rt.id and a1.person_id = ci.person_id and ci.movie_id = mc.movie_id;
q7a#####select min(n.name) as of_person, min(t.title) as biography_movie from aka_name as an, cast_info as ci, info_type as it, link_type as lt, movie_link as ml, name as n, person_info as pi, title as t where an.name like '%a%' and it.info ='mini biography' and lt.link ='features' and n.name_pcode_cf between 'a' and 'f' and (n.gender='m' or (n.gender = 'f' and n.name like 'b%')) and pi.note ='volker boehm' and t.production_year between 1980 and 1995 and n.id = an.person_id and n.id = pi.person_id and ci.person_id = n.id and t.id = ci.movie_id and ml.linked_movie_id = t.id and lt.id = ml.link_type_id and it.id = pi.info_type_id and pi.person_id = an.person_id and pi.person_id = ci.person_id and an.person_id = ci.person_id and ci.movie_id = ml.linked_movie_id;
q21b#####select min(cn.name) as company_name, min(lt.link) as link_type, min(t.title) as german_follow_up from company_name as cn, company_type as ct, keyword as k, link_type as lt, movie_companies as mc, movie_info as mi, movie_keyword as mk, movie_link as ml, title as t where cn.country_code !='[pl]' and (cn.name like '%film%' or cn.name like '%warner%') and ct.kind ='production companies' and k.keyword ='sequel' and lt.link like '%follow%' and mc.note is null and mi.info in ('germany', 'german') and t.production_year between 2000 and 2010 and lt.id = ml.link_type_id and ml.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_type_id = ct.id and mc.company_id = cn.id and mi.movie_id = t.id and ml.movie_id = mk.movie_id and ml.movie_id = mc.movie_id and mk.movie_id = mc.movie_id and ml.movie_id = mi.movie_id and mk.movie_id = mi.movie_id and mc.movie_id = mi.movie_id;
q6d#####select min(k.keyword) as movie_keyword, min(n.name) as actor_name, min(t.title) as hero_movie from cast_info as ci, keyword as k, movie_keyword as mk, name as n, title as t where k.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') and n.name like '%downey%robert%' and t.production_year > 2000 and k.id = mk.keyword_id and t.id = mk.movie_id and t.id = ci.movie_id and ci.movie_id = mk.movie_id and n.id = ci.person_id;
q17a#####select min(n.name) as member_in_charnamed_american_movie, min(n.name) as a1 from cast_info as ci, company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, name as n, title as t where cn.country_code ='[us]' and k.keyword ='character-name-in-title' and n.name like 'b%' and n.id = ci.person_id and ci.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_id = cn.id and ci.movie_id = mc.movie_id and ci.movie_id = mk.movie_id and mc.movie_id = mk.movie_id;
q17c#####select min(n.name) as member_in_charnamed_movie, min(n.name) as a1 from cast_info as ci, company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, name as n, title as t where k.keyword ='character-name-in-title' and n.name like 'x%' and n.id = ci.person_id and ci.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_id = cn.id and ci.movie_id = mc.movie_id and ci.movie_id = mk.movie_id and mc.movie_id = mk.movie_id;
q7b#####select min(n.name) as of_person, min(t.title) as biography_movie from aka_name as an, cast_info as ci, info_type as it, link_type as lt, movie_link as ml, name as n, person_info as pi, title as t where an.name like '%a%' and it.info ='mini biography' and lt.link ='features' and n.name_pcode_cf like 'd%' and n.gender='m' and pi.note ='volker boehm' and t.production_year between 1980 and 1984 and n.id = an.person_id and n.id = pi.person_id and ci.person_id = n.id and t.id = ci.movie_id and ml.linked_movie_id = t.id and lt.id = ml.link_type_id and it.id = pi.info_type_id and pi.person_id = an.person_id and pi.person_id = ci.person_id and an.person_id = ci.person_id and ci.movie_id = ml.linked_movie_id;
q21a#####select min(cn.name) as company_name, min(lt.link) as link_type, min(t.title) as western_follow_up from company_name as cn, company_type as ct, keyword as k, link_type as lt, movie_companies as mc, movie_info as mi, movie_keyword as mk, movie_link as ml, title as t where cn.country_code !='[pl]' and (cn.name like '%film%' or cn.name like '%warner%') and ct.kind ='production companies' and k.keyword ='sequel' and lt.link like '%follow%' and mc.note is null and mi.info in ('sweden', 'norway', 'germany', 'denmark', 'swedish', 'denish', 'norwegian', 'german') and t.production_year between 1950 and 2000 and lt.id = ml.link_type_id and ml.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_type_id = ct.id and mc.company_id = cn.id and mi.movie_id = t.id and ml.movie_id = mk.movie_id and ml.movie_id = mc.movie_id and mk.movie_id = mc.movie_id and ml.movie_id = mi.movie_id and mk.movie_id = mi.movie_id and mc.movie_id = mi.movie_id;
q17b#####select min(n.name) as member_in_charnamed_movie, min(n.name) as a1 from cast_info as ci, company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, name as n, title as t where k.keyword ='character-name-in-title' and n.name like 'z%' and n.id = ci.person_id and ci.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_id = cn.id and ci.movie_id = mc.movie_id and ci.movie_id = mk.movie_id and mc.movie_id = mk.movie_id;
q16b#####select min(an.name) as cool_actor_pseudonym, min(t.title) as series_named_after_char from aka_name as an, cast_info as ci, company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, name as n, title as t where cn.country_code ='[us]' and k.keyword ='character-name-in-title' and an.person_id = n.id and n.id = ci.person_id and ci.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_id = cn.id and an.person_id = ci.person_id and ci.movie_id = mc.movie_id and ci.movie_id = mk.movie_id and mc.movie_id = mk.movie_id;
q6c#####select min(k.keyword) as movie_keyword, min(n.name) as actor_name, min(t.title) as marvel_movie from cast_info as ci, keyword as k, movie_keyword as mk, name as n, title as t where k.keyword = 'marvel-cinematic-universe' and n.name like '%downey%robert%' and t.production_year > 2014 and k.id = mk.keyword_id and t.id = mk.movie_id and t.id = ci.movie_id and ci.movie_id = mk.movie_id and n.id = ci.person_id;
q20a#####select min(t.title) as complete_downey_ironman_movie from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, char_name as chn, cast_info as ci, keyword as k, kind_type as kt, movie_keyword as mk, name as n, title as t where cct1.kind = 'cast' and cct2.kind like '%complete%' and chn.name not like '%sherlock%' and (chn.name like '%tony%stark%' or chn.name like '%iron%man%') and k.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') and kt.kind = 'movie' and t.production_year > 1950 and kt.id = t.kind_id and t.id = mk.movie_id and t.id = ci.movie_id and t.id = cc.movie_id and mk.movie_id = ci.movie_id and mk.movie_id = cc.movie_id and ci.movie_id = cc.movie_id and chn.id = ci.person_role_id and n.id = ci.person_id and k.id = mk.keyword_id and cct1.id = cc.subject_id and cct2.id = cc.status_id;
q6b#####select min(k.keyword) as movie_keyword, min(n.name) as actor_name, min(t.title) as hero_movie from cast_info as ci, keyword as k, movie_keyword as mk, name as n, title as t where k.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') and n.name like '%downey%robert%' and t.production_year > 2014 and k.id = mk.keyword_id and t.id = mk.movie_id and t.id = ci.movie_id and ci.movie_id = mk.movie_id and n.id = ci.person_id;
q16c#####select min(an.name) as cool_actor_pseudonym, min(t.title) as series_named_after_char from aka_name as an, cast_info as ci, company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, name as n, title as t where cn.country_code ='[us]' and k.keyword ='character-name-in-title' and t.episode_nr < 100 and an.person_id = n.id and n.id = ci.person_id and ci.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_id = cn.id and an.person_id = ci.person_id and ci.movie_id = mc.movie_id and ci.movie_id = mk.movie_id and mc.movie_id = mk.movie_id;
q16a#####select min(an.name) as cool_actor_pseudonym, min(t.title) as series_named_after_char from aka_name as an, cast_info as ci, company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, name as n, title as t where cn.country_code ='[us]' and k.keyword ='character-name-in-title' and t.episode_nr >= 50 and t.episode_nr < 100 and an.person_id = n.id and n.id = ci.person_id and ci.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_id = cn.id and an.person_id = ci.person_id and ci.movie_id = mc.movie_id and ci.movie_id = mk.movie_id and mc.movie_id = mk.movie_id;
q17e#####select min(n.name) as member_in_charnamed_movie from cast_info as ci, company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, name as n, title as t where cn.country_code ='[us]' and k.keyword ='character-name-in-title' and n.id = ci.person_id and ci.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_id = cn.id and ci.movie_id = mc.movie_id and ci.movie_id = mk.movie_id and mc.movie_id = mk.movie_id;
q20b#####select min(t.title) as complete_downey_ironman_movie from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, char_name as chn, cast_info as ci, keyword as k, kind_type as kt, movie_keyword as mk, name as n, title as t where cct1.kind = 'cast' and cct2.kind like '%complete%' and chn.name not like '%sherlock%' and (chn.name like '%tony%stark%' or chn.name like '%iron%man%') and k.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') and kt.kind = 'movie' and n.name like '%downey%robert%' and t.production_year > 2000 and kt.id = t.kind_id and t.id = mk.movie_id and t.id = ci.movie_id and t.id = cc.movie_id and mk.movie_id = ci.movie_id and mk.movie_id = cc.movie_id and ci.movie_id = cc.movie_id and chn.id = ci.person_role_id and n.id = ci.person_id and k.id = mk.keyword_id and cct1.id = cc.subject_id and cct2.id = cc.status_id;
q6a#####select min(k.keyword) as movie_keyword, min(n.name) as actor_name, min(t.title) as marvel_movie from cast_info as ci, keyword as k, movie_keyword as mk, name as n, title as t where k.keyword = 'marvel-cinematic-universe' and n.name like '%downey%robert%' and t.production_year > 2010 and k.id = mk.keyword_id and t.id = mk.movie_id and t.id = ci.movie_id and ci.movie_id = mk.movie_id and n.id = ci.person_id;
q17d#####select min(n.name) as member_in_charnamed_movie from cast_info as ci, company_name as cn, keyword as k, movie_companies as mc, movie_keyword as mk, name as n, title as t where k.keyword ='character-name-in-title' and n.name like '%bert%' and n.id = ci.person_id and ci.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_id = cn.id and ci.movie_id = mc.movie_id and ci.movie_id = mk.movie_id and mc.movie_id = mk.movie_id;
q11c#####select min(cn.name) as from_company, min(mc.note) as production_note, min(t.title) as movie_based_on_book from company_name as cn, company_type as ct, keyword as k, link_type as lt, movie_companies as mc, movie_keyword as mk, movie_link as ml, title as t where cn.country_code !='[pl]' and (cn.name like '20th century fox%' or cn.name like 'twentieth century fox%') and ct.kind != 'production companies' and ct.kind is not null and k.keyword in ('sequel', 'revenge', 'based-on-novel') and mc.note is not null and t.production_year > 1950 and lt.id = ml.link_type_id and ml.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_type_id = ct.id and mc.company_id = cn.id and ml.movie_id = mk.movie_id and ml.movie_id = mc.movie_id and mk.movie_id = mc.movie_id;
q1b#####select min(mc.note) as production_note, min(t.title) as movie_title, min(t.production_year) as movie_year from company_type as ct, info_type as it, movie_companies as mc, movie_info_idx as mi_idx, title as t where ct.kind = 'production companies' and it.info = 'bottom 10 rank' and mc.note not like '%(as metro-goldwyn-mayer pictures)%' and t.production_year between 2005 and 2010 and ct.id = mc.company_type_id and t.id = mc.movie_id and t.id = mi_idx.movie_id and mc.movie_id = mi_idx.movie_id and it.id = mi_idx.info_type_id;
q31a#####select min(mi.info) as movie_budget, min(mi_idx.info) as movie_votes, min(n.name) as writer, min(t.title) as violent_liongate_movie from cast_info as ci, company_name as cn, info_type as it1, info_type as it2, keyword as k, movie_companies as mc, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, name as n, title as t where ci.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') and cn.name like 'lionsgate%' and it1.info = 'genres' and it2.info = 'votes' and k.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') and mi.info in ('horror', 'thriller') and n.gender = 'm' and t.id = mi.movie_id and t.id = mi_idx.movie_id and t.id = ci.movie_id and t.id = mk.movie_id and t.id = mc.movie_id and ci.movie_id = mi.movie_id and ci.movie_id = mi_idx.movie_id and ci.movie_id = mk.movie_id and ci.movie_id = mc.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mk.movie_id and mi.movie_id = mc.movie_id and mi_idx.movie_id = mk.movie_id and mi_idx.movie_id = mc.movie_id and mk.movie_id = mc.movie_id and n.id = ci.person_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and k.id = mk.keyword_id and cn.id = mc.company_id;
q27a#####select min(cn.name) as producing_company, min(lt.link) as link_type, min(t.title) as complete_western_sequel from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, company_name as cn, company_type as ct, keyword as k, link_type as lt, movie_companies as mc, movie_info as mi, movie_keyword as mk, movie_link as ml, title as t where cct1.kind in ('cast', 'crew') and cct2.kind = 'complete' and cn.country_code !='[pl]' and (cn.name like '%film%' or cn.name like '%warner%') and ct.kind ='production companies' and k.keyword ='sequel' and lt.link like '%follow%' and mc.note is null and mi.info in ('sweden', 'germany', 'swedish', 'german') and t.production_year between 1950 and 2000 and lt.id = ml.link_type_id and ml.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_type_id = ct.id and mc.company_id = cn.id and mi.movie_id = t.id and t.id = cc.movie_id and cct1.id = cc.subject_id and cct2.id = cc.status_id and ml.movie_id = mk.movie_id and ml.movie_id = mc.movie_id and mk.movie_id = mc.movie_id and ml.movie_id = mi.movie_id and mk.movie_id = mi.movie_id and mc.movie_id = mi.movie_id and ml.movie_id = cc.movie_id and mk.movie_id = cc.movie_id and mc.movie_id = cc.movie_id and mi.movie_id = cc.movie_id;
q1c#####select min(mc.note) as production_note, min(t.title) as movie_title, min(t.production_year) as movie_year from company_type as ct, info_type as it, movie_companies as mc, movie_info_idx as mi_idx, title as t where ct.kind = 'production companies' and it.info = 'top 250 rank' and mc.note not like '%(as metro-goldwyn-mayer pictures)%' and (mc.note like '%(co-production)%') and t.production_year >2010 and ct.id = mc.company_type_id and t.id = mc.movie_id and t.id = mi_idx.movie_id and mc.movie_id = mi_idx.movie_id and it.id = mi_idx.info_type_id;
q11b#####select min(cn.name) as from_company, min(lt.link) as movie_link_type, min(t.title) as sequel_movie from company_name as cn, company_type as ct, keyword as k, link_type as lt, movie_companies as mc, movie_keyword as mk, movie_link as ml, title as t where cn.country_code !='[pl]' and (cn.name like '%film%' or cn.name like '%warner%') and ct.kind ='production companies' and k.keyword ='sequel' and lt.link like '%follows%' and mc.note is null and t.production_year = 1998 and t.title like '%money%' and lt.id = ml.link_type_id and ml.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_type_id = ct.id and mc.company_id = cn.id and ml.movie_id = mk.movie_id and ml.movie_id = mc.movie_id and mk.movie_id = mc.movie_id;
q1a#####select min(mc.note) as production_note, min(t.title) as movie_title, min(t.production_year) as movie_year from company_type as ct, info_type as it, movie_companies as mc, movie_info_idx as mi_idx, title as t where ct.kind = 'production companies' and it.info = 'top 250 rank' and mc.note not like '%(as metro-goldwyn-mayer pictures)%' and (mc.note like '%(co-production)%' or mc.note like '%(presents)%') and ct.id = mc.company_type_id and t.id = mc.movie_id and t.id = mi_idx.movie_id and mc.movie_id = mi_idx.movie_id and it.id = mi_idx.info_type_id;
q31b#####select min(mi.info) as movie_budget, min(mi_idx.info) as movie_votes, min(n.name) as writer, min(t.title) as violent_liongate_movie from cast_info as ci, company_name as cn, info_type as it1, info_type as it2, keyword as k, movie_companies as mc, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, name as n, title as t where ci.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') and cn.name like 'lionsgate%' and it1.info = 'genres' and it2.info = 'votes' and k.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') and mc.note like '%(blu-ray)%' and mi.info in ('horror', 'thriller') and n.gender = 'm' and t.production_year > 2000 and (t.title like '%freddy%' or t.title like '%jason%' or t.title like 'saw%') and t.id = mi.movie_id and t.id = mi_idx.movie_id and t.id = ci.movie_id and t.id = mk.movie_id and t.id = mc.movie_id and ci.movie_id = mi.movie_id and ci.movie_id = mi_idx.movie_id and ci.movie_id = mk.movie_id and ci.movie_id = mc.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mk.movie_id and mi.movie_id = mc.movie_id and mi_idx.movie_id = mk.movie_id and mi_idx.movie_id = mc.movie_id and mk.movie_id = mc.movie_id and n.id = ci.person_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and k.id = mk.keyword_id and cn.id = mc.company_id;
q27b#####select min(cn.name) as producing_company, min(lt.link) as link_type, min(t.title) as complete_western_sequel from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, company_name as cn, company_type as ct, keyword as k, link_type as lt, movie_companies as mc, movie_info as mi, movie_keyword as mk, movie_link as ml, title as t where cct1.kind in ('cast', 'crew') and cct2.kind = 'complete' and cn.country_code !='[pl]' and (cn.name like '%film%' or cn.name like '%warner%') and ct.kind ='production companies' and k.keyword ='sequel' and lt.link like '%follow%' and mc.note is null and mi.info in ('sweden', 'germany', 'swedish', 'german') and t.production_year = 1998 and lt.id = ml.link_type_id and ml.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_type_id = ct.id and mc.company_id = cn.id and mi.movie_id = t.id and t.id = cc.movie_id and cct1.id = cc.subject_id and cct2.id = cc.status_id and ml.movie_id = mk.movie_id and ml.movie_id = mc.movie_id and mk.movie_id = mc.movie_id and ml.movie_id = mi.movie_id and mk.movie_id = mi.movie_id and mc.movie_id = mi.movie_id and ml.movie_id = cc.movie_id and mk.movie_id = cc.movie_id and mc.movie_id = cc.movie_id and mi.movie_id = cc.movie_id;
q11a#####select min(cn.name) as from_company, min(lt.link) as movie_link_type, min(t.title) as non_polish_sequel_movie from company_name as cn, company_type as ct, keyword as k, link_type as lt, movie_companies as mc, movie_keyword as mk, movie_link as ml, title as t where cn.country_code !='[pl]' and (cn.name like '%film%' or cn.name like '%warner%') and ct.kind ='production companies' and k.keyword ='sequel' and lt.link like '%follow%' and mc.note is null and t.production_year between 1950 and 2000 and lt.id = ml.link_type_id and ml.movie_id = t.id and t.id = mk.movie_id and mk.keyword_id = k.id and t.id = mc.movie_id and mc.company_type_id = ct.id and mc.company_id = cn.id and ml.movie_id = mk.movie_id and ml.movie_id = mc.movie_id and mk.movie_id = mc.movie_id;
q10a#####select min(chn.name) as uncredited_voiced_character, min(t.title) as russian_movie from char_name as chn, cast_info as ci, company_name as cn, company_type as ct, movie_companies as mc, role_type as rt, title as t where ci.note like '%(voice)%' and ci.note like '%(uncredited)%' and cn.country_code = '[ru]' and rt.role = 'actor' and t.production_year > 2005 and t.id = mc.movie_id and t.id = ci.movie_id and ci.movie_id = mc.movie_id and chn.id = ci.person_role_id and rt.id = ci.role_id and cn.id = mc.company_id and ct.id = mc.company_type_id;
q26b#####select min(chn.name) as character_name, min(mi_idx.info) as rating, min(t.title) as complete_hero_movie from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, char_name as chn, cast_info as ci, info_type as it2, keyword as k, kind_type as kt, movie_info_idx as mi_idx, movie_keyword as mk, name as n, title as t where cct1.kind = 'cast' and cct2.kind like '%complete%' and chn.name is not null and (chn.name like '%man%' or chn.name like '%man%') and it2.info = 'rating' and k.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight') and kt.kind = 'movie' and mi_idx.info > '8.0' and t.production_year > 2005 and kt.id = t.kind_id and t.id = mk.movie_id and t.id = ci.movie_id and t.id = cc.movie_id and t.id = mi_idx.movie_id and mk.movie_id = ci.movie_id and mk.movie_id = cc.movie_id and mk.movie_id = mi_idx.movie_id and ci.movie_id = cc.movie_id and ci.movie_id = mi_idx.movie_id and cc.movie_id = mi_idx.movie_id and chn.id = ci.person_role_id and n.id = ci.person_id and k.id = mk.keyword_id and cct1.id = cc.subject_id and cct2.id = cc.status_id and it2.id = mi_idx.info_type_id;
q30b#####select min(mi.info) as movie_budget, min(mi_idx.info) as movie_votes, min(n.name) as writer, min(t.title) as complete_gore_movie from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, cast_info as ci, info_type as it1, info_type as it2, keyword as k, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, name as n, title as t where cct1.kind in ('cast', 'crew') and cct2.kind ='complete+verified' and ci.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') and it1.info = 'genres' and it2.info = 'votes' and k.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') and mi.info in ('horror', 'thriller') and n.gender = 'm' and t.production_year > 2000 and (t.title like '%freddy%' or t.title like '%jason%' or t.title like 'saw%') and t.id = mi.movie_id and t.id = mi_idx.movie_id and t.id = ci.movie_id and t.id = mk.movie_id and t.id = cc.movie_id and ci.movie_id = mi.movie_id and ci.movie_id = mi_idx.movie_id and ci.movie_id = mk.movie_id and ci.movie_id = cc.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mk.movie_id and mi.movie_id = cc.movie_id and mi_idx.movie_id = mk.movie_id and mi_idx.movie_id = cc.movie_id and mk.movie_id = cc.movie_id and n.id = ci.person_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and k.id = mk.keyword_id and cct1.id = cc.subject_id and cct2.id = cc.status_id;
q10b#####select min(chn.name) as character, min(t.title) as russian_mov_with_actor_producer from char_name as chn, cast_info as ci, company_name as cn, company_type as ct, movie_companies as mc, role_type as rt, title as t where ci.note like '%(producer)%' and cn.country_code = '[ru]' and rt.role = 'actor' and t.production_year > 2010 and t.id = mc.movie_id and t.id = ci.movie_id and ci.movie_id = mc.movie_id and chn.id = ci.person_role_id and rt.id = ci.role_id and cn.id = mc.company_id and ct.id = mc.company_type_id;
q26a#####select min(chn.name) as character_name, min(mi_idx.info) as rating, min(n.name) as playing_actor, min(t.title) as complete_hero_movie from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, char_name as chn, cast_info as ci, info_type as it2, keyword as k, kind_type as kt, movie_info_idx as mi_idx, movie_keyword as mk, name as n, title as t where cct1.kind = 'cast' and cct2.kind like '%complete%' and chn.name is not null and (chn.name like '%man%' or chn.name like '%man%') and it2.info = 'rating' and k.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') and kt.kind = 'movie' and mi_idx.info > '7.0' and t.production_year > 2000 and kt.id = t.kind_id and t.id = mk.movie_id and t.id = ci.movie_id and t.id = cc.movie_id and t.id = mi_idx.movie_id and mk.movie_id = ci.movie_id and mk.movie_id = cc.movie_id and mk.movie_id = mi_idx.movie_id and ci.movie_id = cc.movie_id and ci.movie_id = mi_idx.movie_id and cc.movie_id = mi_idx.movie_id and chn.id = ci.person_role_id and n.id = ci.person_id and k.id = mk.keyword_id and cct1.id = cc.subject_id and cct2.id = cc.status_id and it2.id = mi_idx.info_type_id;
q30a#####select min(mi.info) as movie_budget, min(mi_idx.info) as movie_votes, min(n.name) as writer, min(t.title) as complete_violent_movie from complete_cast as cc, comp_cast_type as cct1, comp_cast_type as cct2, cast_info as ci, info_type as it1, info_type as it2, keyword as k, movie_info as mi, movie_info_idx as mi_idx, movie_keyword as mk, name as n, title as t where cct1.kind in ('cast', 'crew') and cct2.kind ='complete+verified' and ci.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') and it1.info = 'genres' and it2.info = 'votes' and k.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') and mi.info in ('horror', 'thriller') and n.gender = 'm' and t.production_year > 2000 and t.id = mi.movie_id and t.id = mi_idx.movie_id and t.id = ci.movie_id and t.id = mk.movie_id and t.id = cc.movie_id and ci.movie_id = mi.movie_id and ci.movie_id = mi_idx.movie_id and ci.movie_id = mk.movie_id and ci.movie_id = cc.movie_id and mi.movie_id = mi_idx.movie_id and mi.movie_id = mk.movie_id and mi.movie_id = cc.movie_id and mi_idx.movie_id = mk.movie_id and mi_idx.movie_id = cc.movie_id and mk.movie_id = cc.movie_id and n.id = ci.person_id and it1.id = mi.info_type_id and it2.id = mi_idx.info_type_id and k.id = mk.keyword_id and cct1.id = cc.subject_id and cct2.id = cc.status_id;